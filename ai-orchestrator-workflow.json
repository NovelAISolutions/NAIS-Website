{
  "name": "AI Agent Orchestrator",
  "nodes": [
    {
      "parameters": {
        "path": "build-project",
        "httpMethod": "POST",
        "responseMode": "onReceived"
      },
      "id": "1a2b3c4d-5e6f-7g8h-9i0j-k1l2m3n4o5p6",
      "name": "Build Project Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "if (!$json.project_data) { throw new Error('project_data missing'); }\\nreturn [{ json: $json }];"
      },
      "id": "validate-code-001",
      "name": "Validate Request",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "const out = { ...$json, projectId: 'proj_' + Date.now() };\\nreturn [{ json: out }];"
      },
      "id": "3c4d5e6f-7g8h-9i0j-1k2l-m3n4o5p6q7r8",
      "name": "Create Project Record",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {},
      "id": "on-error-0001",
      "name": "On Error",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [240, 40]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:8000/agent/requirements",
        "sendBody": true,
        "jsonParameters": true,
        "jsonBody": "={{ { project_data: $json } }}"
      },
      "id": "5e6f7g8h-9i0j-1k2l-3m4n-o5p6q7r8s9t0",
      "name": "Requirements Analyzer",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [900, 120]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:8000/agent/architecture",
        "sendBody": true,
        "jsonParameters": true,
        "jsonBody": "={{ { requirements: $json } }}"
      },
      "id": "6f7g8h9i-0j1k-2l3m-4n5o-p6q7r8s9t0u1",
      "name": "Architecture Designer",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [900, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:8000/agent/tech-evaluator",
        "sendBody": true,
        "jsonParameters": true,
        "jsonBody": "={{ { requirements: $json } }}"
      },
      "id": "7g8h9i0j-1k2l-3m4n-5o6p-q7r8s9t0u1v2",
      "name": "Tech Stack Evaluator",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [900, 480]
    },
    {
      "parameters": {
        "jsCode": "const results = $input.all().map(i => i.json);\\nreturn [{ json: { final_architecture: results, projectId: $json.projectId } }];"
      },
      "id": "9i0j1k2l-3m4n-5o6p-7q8r-s9t0u1v2w3x4",
      "name": "Merge Architecture Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1140, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:8000/agent/backend",
        "sendBody": true,
        "jsonParameters": true,
        "jsonBody": "={{ { architecture: $json.final_architecture, projectId: $json.projectId } }}"
      },
      "id": "1k2l3m4n-5o6p-7q8r-9s0t-u1v2w3x4y5z6",
      "name": "Backend Generator",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1360, 180]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:8000/agent/frontend",
        "sendBody": true,
        "jsonParameters": true,
        "jsonBody": "={{ { architecture: $json.final_architecture, projectId: $json.projectId } }}"
      },
      "id": "2l3m4n5o-6p7q-8r9s-0t1u-v2w3x4y5z6a7",
      "name": "Frontend Generator",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1360, 420]
    },
    {
      "parameters": {
        "jsCode": "const merged = $input.all().map(i => i.json);\\nreturn [{ json: { merged_code: merged, projectId: $json.projectId } }];"
      },
      "id": "merge-codes-001",
      "name": "Merge Codes",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1580, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:8000/agent/testing",
        "sendBody": true,
        "jsonParameters": true,
        "jsonBody": "={{ { generated_code: $json.merged_code, projectId: $json.projectId } }}"
      },
      "id": "3m4n5o6p-7q8r-9s0t-1u2v-w3x4y5z6a7b8",
      "name": "Testing Engine",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1800, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:8000/agent/deployment",
        "sendBody": true,
        "jsonParameters": true,
        "jsonBody": "={{ { project_data: $json } }}"
      },
      "id": "4n5o6p7q-8r9s-0t1u-2v3w-x4y5z6a7b8c9",
      "name": "Deployment Manager",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [2020, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:8000/api/projects/update-status",
        "sendBody": true,
        "jsonParameters": true,
        "jsonBody": "={{ { project_id: $json.projectId, status: 'completed' } }}"
      },
      "id": "5o6p7q8r-9s0t-1u2v-3w4x-y5z6a7b8c9d0",
      "name": "Update Project Status",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [2240, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:8000/api/projects/update-status",
        "sendBody": true,
        "jsonParameters": true,
        "jsonBody": "={{ { project_id: $items('Create Project Record')[0].json.projectId, status: 'failed' } }}"
      },
      "id": "fail-status-001",
      "name": "Update Project Status (Failed)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [460, 40]
    }
  ],
  "connections": {
    "Build Project Webhook": { "main": [[{ "node": "Validate Request", "type": "main", "index": 0 }]] },
    "Validate Request": { "main": [[{ "node": "Create Project Record", "type": "main", "index": 0 }]] },
    "Create Project Record": {
      "main": [
        [{ "node": "Requirements Analyzer", "type": "main", "index": 0 }],
        [{ "node": "Architecture Designer", "type": "main", "index": 0 }],
        [{ "node": "Tech Stack Evaluator", "type": "main", "index": 0 }]
      ]
    },
    "Requirements Analyzer": { "main": [[{ "node": "Merge Architecture Results", "type": "main", "index": 0 }]] },
    "Architecture Designer": { "main": [[{ "node": "Merge Architecture Results", "type": "main", "index": 1 }]] },
    "Tech Stack Evaluator": { "main": [[{ "node": "Merge Architecture Results", "type": "main", "index": 2 }]] },
    "Merge Architecture Results": {
      "main": [
        [{ "node": "Backend Generator", "type": "main", "index": 0 }],
        [{ "node": "Frontend Generator", "type": "main", "index": 0 }]
      ]
    },
    "Backend Generator": { "main": [[{ "node": "Merge Codes", "type": "main", "index": 0 }]] },
    "Frontend Generator": { "main": [[{ "node": "Merge Codes", "type": "main", "index": 1 }]] },
    "Merge Codes": { "main": [[{ "node": "Testing Engine", "type": "main", "index": 0 }]] },
    "Testing Engine": { "main": [[{ "node": "Deployment Manager", "type": "main", "index": 0 }]] },
    "Deployment Manager": { "main": [[{ "node": "Update Project Status", "type": "main", "index": 0 }]] },
    "On Error": { "main": [[{ "node": "Update Project Status (Failed)", "type": "main", "index": 0 }]] }
  },
  "pinData": {}
}
