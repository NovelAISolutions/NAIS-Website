{
  "name": "AI Build Orchestrator – Sandbox First Deployment (HTTP-Compatible v2.0)",
  "active": false,
  "nodes": [
    {
      "parameters": {},
      "id": "1",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [200, 300]
    },

    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "authentication": "none",
        "sendBody": true,
        "jsonBody": {
          "model": "gpt-4o-mini",
          "messages": [
            { "role": "system", "content": "You are the Architect Agent. Generate architecture and file plan based on PRD input." },
            { "role": "user", "content": "{{$json[\"prd\"]}}" }
          ]
        },
        "options": {
          "headers": {
            "Authorization": "Bearer {{$env.OPENAI_API_KEY}}",
            "Content-Type": "application/json"
          }
        }
      },
      "id": "2",
      "name": "Architect Agent (HTTP)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [500, 300]
    },

    {
      "parameters": {
        "url": "https://a10-runner.onrender.com/run/coder",
        "method": "POST",
        "sendBody": true,
        "jsonBody": {
          "repo": "a10-orchestrator-sandbox",
          "branch": "dev",
          "plan": "={{$json[\"data\"]}}"
        }
      },
      "id": "3",
      "name": "A10 Coder Agent Runner",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [800, 300]
    },

    {
      "parameters": {
        "url": "https://a10-runner.onrender.com/run/tester",
        "method": "POST",
        "sendBody": true,
        "jsonBody": { "repo": "a10-orchestrator-sandbox", "branch": "dev" }
      },
      "id": "4",
      "name": "A10 Tester Agent Runner",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1100, 300]
    },

    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendBody": true,
        "jsonBody": {
          "model": "gpt-4o-mini",
          "messages": [
            { "role": "system", "content": "You are the Quality Guardian Agent. Review lint/test report vs CODE_STANDARDS.md and return pass/fail JSON." },
            { "role": "user", "content": "Review results: {{$json[\"tester_logs\"]}}" }
          ]
        },
        "options": {
          "headers": {
            "Authorization": "Bearer {{$env.OPENAI_API_KEY}}",
            "Content-Type": "application/json"
          }
        }
      },
      "id": "5",
      "name": "Quality Guardian Agent (HTTP)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1400, 300]
    },

    {
      "parameters": {
        "conditions": {
          "boolean": [
            { "value1": "={{$json[\"status\"] == 'pass'}}" }
          ]
        }
      },
      "id": "6",
      "name": "IF Quality Check Passed?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1700, 300]
    },

    {
      "parameters": {
        "url": "https://a10-runner.onrender.com/run/integrator",
        "method": "POST",
        "sendBody": true,
        "jsonBody": {
          "repo": "a10-orchestrator-sandbox",
          "branch": "dev",
          "action": "push"
        }
      },
      "id": "7",
      "name": "A10 Integrator (Sandbox)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [2000, 200]
    },

    {
      "parameters": {
        "resource": "issue",
        "operation": "create",
        "owner": "NovelAISolutions",
        "repository": "a10-orchestrator-sandbox",
        "title": "Quality check failed",
        "body": "The Quality Guardian Agent found issues. See Tester logs."
      },
      "id": "8",
      "name": "Create GitHub Issue",
      "type": "n8n-nodes-base.github",
      "typeVersion": 2,
      "position": [2000, 400],
      "credentials": { "githubApi": { "name": "GitHub Token" } }
    },

    {
      "parameters": {
        "url": "https://api.openai.com/v1/chat/completions",
        "method": "POST",
        "sendBody": true,
        "jsonBody": {
          "model": "gpt-4o-mini",
          "messages": [
            { "role": "system", "content": "You are the Supervisor Agent. Summarize sandbox deployment results and provide preview URL." },
            { "role": "user", "content": "{{$json}}" }
          ]
        },
        "options": {
          "headers": {
            "Authorization": "Bearer {{$env.OPENAI_API_KEY}}",
            "Content-Type": "application/json"
          }
        }
      },
      "id": "10",
      "name": "Supervisor Agent (Sandbox, HTTP)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [2300, 200]
    },

    {
      "parameters": {},
      "id": "11",
      "name": "Manual Approval: Promote to Prod?",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [2600, 200]
    },

    {
      "parameters": {
        "url": "https://a10-runner.onrender.com/run/integrator",
        "method": "POST",
        "sendBody": true,
        "jsonBody": {
          "repo": "a10-orchestrator-sandbox",
          "merge": "dev→main"
        }
      },
      "id": "12",
      "name": "A10 Integrator (Production)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [2900, 200]
    },

    {
      "parameters": {
        "url": "https://a10-orchestrator-sandbox.vercel.app/api/health",
        "method": "GET"
      },
      "id": "13",
      "name": "HealthCheck Agent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [3200, 200]
    },

    {
      "parameters": {
        "url": "https://api.openai.com/v1/chat/completions",
        "method": "POST",
        "sendBody": true,
        "jsonBody": {
          "model": "gpt-4o-mini",
          "messages": [
            { "role": "system", "content": "You are the final Supervisor Agent. Summarize production release results, include URLs and commit hash." },
            { "role": "user", "content": "{{$json}}" }
          ]
        },
        "options": {
          "headers": {
            "Authorization": "Bearer {{$env.OPENAI_API_KEY}}",
            "Content-Type": "application/json"
          }
        }
      },
      "id": "14",
      "name": "Supervisor Agent (Production, HTTP)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [3500, 200]
    }
  ],

  "connections": {
    "Manual Trigger": {
      "main": [[{ "node": "Architect Agent (HTTP)", "type": "main", "index": 0 }]]
    },
    "Architect Agent (HTTP)": {
      "main": [[{ "node": "A10 Coder Agent Runner", "type": "main", "index": 0 }]]
    },
    "A10 Coder Agent Runner": {
      "main": [[{ "node": "A10 Tester Agent Runner", "type": "main", "index": 0 }]]
    },
    "A10 Tester Agent Runner": {
      "main": [[{ "node": "Quality Guardian Agent (HTTP)", "type": "main", "index": 0 }]]
    },
    "Quality Guardian Agent (HTTP)": {
      "main": [[{ "node": "IF Quality Check Passed?", "type": "main", "index": 0 }]]
    },
    "IF Quality Check Passed?": {
      "main": [
        [{ "node": "A10 Integrator (Sandbox)", "type": "main", "index": 0 }],
        [{ "node": "Create GitHub Issue", "type": "main", "index": 0 }]
      ]
    },
    "A10 Integrator (Sandbox)": {
      "main": [[{ "node": "Supervisor Agent (Sandbox, HTTP)", "type": "main", "index": 0 }]]
    },
    "Supervisor Agent (Sandbox, HTTP)": {
      "main": [[{ "node": "Manual Approval: Promote to Prod?", "type": "main", "index": 0 }]]
    },
    "Manual Approval: Promote to Prod?": {
      "main": [[{ "node": "A10 Integrator (Production)", "type": "main", "index": 0 }]]
    },
    "A10 Integrator (Production)": {
      "main": [[{ "node": "HealthCheck Agent", "type": "main", "index": 0 }]]
    },
    "HealthCheck Agent": {
      "main": [[{ "node": "Supervisor Agent (Production, HTTP)", "type": "main", "index": 0 }]]
    }
  },
  "settings": { "timezone": "UTC" }
}
